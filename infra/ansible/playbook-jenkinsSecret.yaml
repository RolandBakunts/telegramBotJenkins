---
- hosts: worker
  become: true
  vars:
    env_file: "../../.env"
    kube_config_src: /home/ubuntu/.kube/config
    kube_config_dest: ./.kube/
    kube_desc: kubernetes_credentials
    kube_id: kube
  tasks:
  - name: Get file from remote host
    fetch:
        src: "{{kube_config_src}}"
        dest: "{{kube_config_dest}}"
        flat: true
  
  - block:
    - name: Display BOT_TOKEN environment variable
      shell: "sed -n 's/^BOT_TOKEN=//p' {{ env_file }}"
      register: BOT_TOKEN

    - name: Display API_TOKEN environment variable
      shell: "sed -n 's/^API_TOKEN=//p' {{ env_file }}"
      register: API_TOKEN
    
    - name: Display JENKINS_URL environment variable
      shell: "sed -n 's/^JENKINS_URL=//p' {{ env_file }}"
      register: JENKINS_URL

    - name: Display JENKINS_PASSWORD environment variable
      shell: "sed -n 's/^JENKINS_PASSWORD=//p' {{ env_file }}"
      register: JENKINS_PASSWORD

    - name: Display JENKINS_USERNAME environment variable
      shell: "sed -n 's/^JENKINS_USERNAME=//p' {{ env_file }}"
      register: JENKINS_USERNAME

    - name: Create Jenkins credential for each registered variable
      uri:
        method: POST
        url: '{{JENKINS_URL.stdout}}/credentials/store/system/domain/_/createCredentials'
        user: "{{JENKINS_USERNAME.stdout}}"
        password: "{{API_TOKEN.stdout}}"
        force_basic_auth: yes
        body: |
          json={
            "credentials": {
              "scope": "GLOBAL",
              "id": "{{ item.name }}",
              "username": "{{ item.name }}",
              "password": "{{ item.password.stdout }}",
              "description": "{{ item.name }}",
              "$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
            }
          }
      with_items:
          - {password: "{{ BOT_TOKEN }}", name: "bot_token"}
          - {password: "{{ API_TOKEN }}", name: "api_token"}
          - {password: "{{ JENKINS_URL }}", name: "jenkins_url" }
          - {password: "{{ JENKINS_PASSWORD }}", name: "jenkins_password" }
          - {password: "{{ JENKINS_USERNAME }}", name: "jenkins_username"}
  
  # Also you can do it with Curl, here is example of secret file
    - name: Create Jenkins credential for each registered variable
      shell: |
        curl -X POST \
        {{JENKINS_URL.stdout}}/credentials/store/system/domain/_/createCredentials \
        --user {{JENKINS_USERNAME.stdout}}:{{API_TOKEN.stdout}} \
        -F secret=@{{kube_config_dest}}config \
        -F 'json={"": "4", "credentials": {"file": "secret", "id": {{kube_id}}, "description": "{{kube_desc}}", "stapler-class": "org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl", "$class": "org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl"}}'
    delegate_to: localhost
    become: false
